---

interface Session {
  id: number;
  title: string;
  Posts: number;
  isActive?: boolean;
}

const sessions: Session[] = [
  { id: 1, title: "Session 21",  Posts: 2, isActive: true },
  { id: 2, title: "Session 22",  Posts: 5 },
  { id: 3, title: "Session 23",  Posts: 5 },
  { id: 4, title: "Session 24",  Posts: 8 },
];

interface Props {
  activeSessions?: Session[];
}

const { activeSessions = sessions } = Astro.props;
---

<div class="session-tabs-container">
  {activeSessions.map((session) => (
    <div class={`session-tab ${session.isActive ? 'active' : ''}`}>
      {session. Posts > 0 && (
        <div class=" -indicator">
          <span>{session. Posts}  Posts</span>
          <div class="notification-dot"></div>
        </div>
      )}
      <div class="session-title">{session.title}</div>
    </div>
  ))}
</div>

<style>
  .session-tabs-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    font-family: Arial, sans-serif;
  }

  .session-tab {
    position: relative;
    background-color: #f2f2f2;
    border-radius: 8px;
    padding: 12px 15px;
    min-width: 120px;
    cursor: pointer;
    transition: background-color 0.2s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .session-tab:hover {
    background-color: #e9e9e9;
  }

  .session-tab.active {
    background-color: #ffffff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }

  . -indicator {
    position: relative;
    display: flex;
    align-items: center;
    font-size: 12px;
    color: #ff6b6b;
    margin-bottom: 4px;
  }

  .notification-dot {
    position: absolute;
    right: -3px;
    top: 2px;
    width: 8px;
    height: 8px;
    background-color: #ff9800;
    border-radius: 50%;
  }

  .session-title {
    font-weight: bold;
    font-size: 16px;
    color: #333333;
  }
</style>